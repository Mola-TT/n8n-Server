# user.env.template - Template for user environment variables
# 
# INSTRUCTIONS:
# 1. Copy this file to 'user.env' in the same directory
# 2. Customize the values as needed for your environment
# 3. The init.sh script will automatically load user.env if it exists
# 
# Part of Milestone 1

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================
# System timezone for server operations
SERVER_TIMEZONE="Asia/Hong_Kong"
# Log level for debugging (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL="INFO"
# Whether to update system packages during initialization
SYSTEM_UPDATE="true"
# Whether to run tests after installation
RUN_TESTS="true"
# Whether to use production environment (false uses development for testing)
PRODUCTION="false"

# =============================================================================
# SECURITY & FIREWALL
# =============================================================================
# Enable automatic firewall configuration
ENABLE_FIREWALL="true"
CONFIGURE_FIREWALL="true"

# =============================================================================
# NGINX CONFIGURATION (MILESTONE 3)
# =============================================================================
# Enable Nginx as reverse proxy for n8n
NGINX_ENABLED="true"
# HTTP port (will redirect to HTTPS)
NGINX_HTTP_PORT="80"
# HTTPS port for secure connections
NGINX_HTTPS_PORT="443"
# Server name for SSL certificate (use your domain name)
NGINX_SERVER_NAME="your-domain.com"
# SSL certificate and key paths for Nginx
NGINX_SSL_CERT_PATH="/etc/nginx/ssl/certificate.crt"
NGINX_SSL_KEY_PATH="/etc/nginx/ssl/private.key"
# Backend n8n service URL
NGINX_PROXY_PASS="http://localhost:5678"
# Maximum upload size for file operations
NGINX_CLIENT_MAX_BODY_SIZE="100M"
# Proxy timeout for long-running operations
NGINX_PROXY_TIMEOUT="300s"
# Force HTTPS redirect (recommended for security)
NGINX_SSL_REDIRECT="true"
# Enable security headers (recommended)
NGINX_SECURITY_HEADERS="true"
# Enable rate limiting to prevent abuse
NGINX_RATE_LIMIT="true"
# Access and error log paths
NGINX_ACCESS_LOG="/var/log/nginx/n8n_access.log"
NGINX_ERROR_LOG="/var/log/nginx/n8n_error.log"

# =============================================================================
# N8N CONFIGURATION
# =============================================================================
# Port n8n listens on for connections
N8N_PORT="5678"
# Host n8n binds to (* for all interfaces, 0.0.0.0 for all IPv4)
N8N_HOST="0.0.0.0"
# Protocol for n8n (http or https)
N8N_PROTOCOL="https"
# Webhook URL for n8n (leave empty for auto-configuration)
N8N_WEBHOOK_URL="https://your-domain.com"
# Editor base URL for n8n (leave empty for auto-configuration)
N8N_EDITOR_BASE_URL="https://your-domain.com"

# Web Interface Authentication
# Enable basic authentication for n8n web interface (recommended for security)
N8N_BASIC_AUTH_ACTIVE="true"
# Username for basic authentication (change from default)
N8N_BASIC_AUTH_USER="admin"
# Strong password for basic authentication (CHANGE THIS!)
N8N_BASIC_AUTH_PASSWORD="your_strong_password_here"

# =============================================================================
# DOCKER CONFIGURATION (MILESTONE 2)
# =============================================================================
# Docker Compose file location
DOCKER_COMPOSE_FILE="/opt/n8n/docker/docker-compose.yml"
# n8n data directory
N8N_DATA_DIR="/opt/n8n"

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================
# SSL private key and certificate paths
N8N_SSL_KEY="/opt/n8n/ssl/private.key"
N8N_SSL_CERT="/opt/n8n/ssl/certificate.crt"
# Enable SSL (always recommended)
SSL_ENABLED="true"

# =============================================================================
# DATABASE CONFIGURATION (EXTERNAL POSTGRESQL)
# =============================================================================
# Update these with your actual PostgreSQL database details
DB_HOST="your-postgres-host.example.com"
DB_PORT="5432"
DB_NAME="your_n8n_database"
DB_USER="your_n8n_user"
DB_PASSWORD="your_secure_database_password"
DB_SSL_ENABLED="true"

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis database number (0-15)
REDIS_DB="0"

# =============================================================================
# EMAIL CONFIGURATION (GLOBAL)
# =============================================================================
# Global email configuration used by all components
EMAIL_SENDER="n8n@example.com"
EMAIL_RECIPIENT="admin@example.com"
SMTP_SERVER="smtp.example.com"
SMTP_PORT="587"
SMTP_TLS="YES"
SMTP_USERNAME="smtp_user"
SMTP_PASSWORD="smtp_password"

# Email Notification Configuration (Milestone 6)
# Configure these settings for hardware change notifications
EMAIL_COOLDOWN_HOURS="24"
TEST_EMAIL_SUBJECT="n8n Server Test Email"
EMAIL_SUBJECT_PREFIX="[n8n Server]"

# =============================================================================
# NETDATA CONFIGURATION (MILESTONE 4)
# =============================================================================
# Enable Netdata system monitoring
NETDATA_ENABLED="true"
# Port Netdata listens on (localhost only for security)
NETDATA_PORT="19999"
# Bind IP for Netdata (localhost only recommended)
NETDATA_BIND_IP="127.0.0.1"
# Netdata directory paths (usually don't need to change)
NETDATA_WEB_DIR="/usr/share/netdata/web"
NETDATA_CACHE_DIR="/var/cache/netdata"
NETDATA_LIB_DIR="/var/lib/netdata"
NETDATA_LOG_DIR="/var/log/netdata"
NETDATA_RUN_DIR="/var/run/netdata"

# Netdata Nginx Proxy Configuration
# Subdomain for monitoring dashboard access
NETDATA_NGINX_SUBDOMAIN="monitor"
# Username for Netdata dashboard authentication (change from default)
NETDATA_NGINX_AUTH_USER="netdata"
# Strong password for Netdata dashboard (CHANGE THIS!)
NETDATA_NGINX_AUTH_PASSWORD="your_secure_monitoring_password"
# Log file paths for Netdata Nginx proxy
NETDATA_NGINX_ACCESS_LOG="/var/log/nginx/netdata_access.log"
NETDATA_NGINX_ERROR_LOG="/var/log/nginx/netdata_error.log"

# Health Monitoring Thresholds (percentage for CPU/RAM/Disk, number for load)
# CPU usage threshold for warnings (percentage)
NETDATA_CPU_THRESHOLD="80"
# RAM usage threshold for warnings (percentage)
NETDATA_RAM_THRESHOLD="80"
# Disk usage threshold for warnings (percentage)
NETDATA_DISK_THRESHOLD="80"
# Load average threshold for warnings
NETDATA_LOAD_THRESHOLD="3.0"

# Netdata Alert Configuration
# Enable health monitoring alerts
NETDATA_ALERTS_ENABLED="true"
# Enable email notifications for alerts
NETDATA_EMAIL_ALERTS="true"
# Email recipient for Netdata alerts (uses global EMAIL_RECIPIENT if not set)
NETDATA_ALERT_EMAIL_RECIPIENT="${EMAIL_RECIPIENT}"
# Email sender for Netdata alerts (uses global EMAIL_SENDER if not set)
NETDATA_ALERT_EMAIL_SENDER="${EMAIL_SENDER}"

# Netdata Security Settings
# Block direct access to Netdata port via firewall (recommended)
NETDATA_FIREWALL_BLOCK_DIRECT="true"
# Disable Netdata registry for privacy (recommended)
NETDATA_REGISTRY_ENABLED="false"
# Disable anonymous statistics for privacy (recommended)
NETDATA_ANONYMOUS_STATISTICS="false"

# =============================================================================
# DYNAMIC OPTIMIZATION CONFIGURATION (MILESTONE 6)
# =============================================================================

# Hardware optimization ratios
# Percentage of CPU cores to use for n8n execution processes (0.75 = 75%)
N8N_EXECUTION_PROCESS_RATIO="0.75"
# Percentage of memory to allocate to n8n (0.4 = 40%)
N8N_MEMORY_RATIO="0.4"
# Base timeout for n8n operations in seconds
N8N_TIMEOUT_BASE="180"

# Docker optimization ratios  
# Percentage of memory to allocate to Docker containers (0.75 = 75%)
DOCKER_MEMORY_RATIO="0.75"
# Percentage of CPU to allocate to Docker containers (0.8 = 80%)
DOCKER_CPU_RATIO="0.8"

# Nginx optimization ratios
# Worker processes multiplier (1.0 = 1 worker per CPU core)
NGINX_WORKER_PROCESS_RATIO="1.0"
# Base worker connections per process
NGINX_WORKER_CONNECTIONS_RATIO="1024"

# Redis optimization ratios
# Percentage of memory to allocate to Redis (0.1 = 10%)
REDIS_MEMORY_RATIO="0.1"
# Redis memory eviction policy
REDIS_MAXMEMORY_POLICY="allkeys-lru"

# Netdata optimization ratios
# Percentage of memory to allocate to Netdata (0.05 = 5%)
NETDATA_MEMORY_RATIO="0.05"
# Update frequency in seconds (lower = more frequent updates)
NETDATA_UPDATE_EVERY="1"

# Hardware change detection
# How often to check for hardware changes in seconds (3600 = 1 hour)
HARDWARE_CHECK_INTERVAL="3600"
# Delay before starting optimization after hardware change (seconds)
OPTIMIZATION_DELAY_SECONDS="30"

# =============================================================================
# MULTI-USER CONFIGURATION (MILESTONE 7)
# =============================================================================

# Multi-user settings
# Enable multi-user functionality
MULTI_USER_ENABLED="true"
# Maximum number of users allowed
MAX_USERS="1000"
# Enable user data isolation
USER_ISOLATION_ENABLED="true"
# Base path for user data
USER_DATA_PATH="/opt/n8n/users"

# User quotas (default values for new users)
# Storage quota per user (e.g., "1GB", "512MB")
DEFAULT_USER_STORAGE_QUOTA="1GB"
# Maximum workflows per user
DEFAULT_USER_WORKFLOW_QUOTA="100"
# Maximum executions per month per user
DEFAULT_USER_EXECUTION_QUOTA="10000"

# User session management
# Session timeout in seconds
USER_SESSION_TIMEOUT="3600"
# Maximum concurrent sessions per user
MAX_CONCURRENT_SESSIONS="5"
# Session cleanup interval in seconds
SESSION_CLEANUP_INTERVAL="900"

# User cleanup settings
# Days after which inactive users are cleaned up
INACTIVE_USER_CLEANUP_DAYS="90"
# Days after which temporary files are cleaned up
TEMP_FILES_CLEANUP_DAYS="7"
# Days to retain execution logs
EXECUTION_LOG_RETENTION_DAYS="30"

# =============================================================================
# IFRAME EMBEDDING CONFIGURATION (MILESTONE 7)
# =============================================================================

# Iframe embedding settings
# Enable iframe embedding functionality
IFRAME_EMBEDDING_ENABLED="true"
# Primary web app domain that can embed n8n
WEBAPP_DOMAIN="https://app.example.com"
# Alternative web app domain (optional)
WEBAPP_DOMAIN_ALT="https://webapp.example.com"

# CORS configuration
# Enable CORS for cross-origin requests
CORS_ENABLED="true"
# Allow credentials in CORS requests
CORS_ALLOW_CREDENTIALS="true"
# CORS preflight cache time in seconds
CORS_MAX_AGE="86400"

# Content Security Policy
# Enable CSP headers for security
CSP_ENABLED="true"
# Frame ancestors allowed to embed n8n (use 'self' for same-origin only)
CSP_FRAME_ANCESTORS="'self' https://app.example.com"

# Cross-origin communication
# Enable postMessage API for iframe communication
POSTMESSAGE_API_ENABLED="true"
# Enable session synchronization between parent and iframe
SESSION_SYNC_ENABLED="true"
# Session sync check interval in seconds
SESSION_SYNC_INTERVAL="300"

# =============================================================================
# CROSS-SERVER COMMUNICATION (MILESTONE 7)
# =============================================================================

# Web app server configuration
# IP address of the web app server
WEBAPP_SERVER_IP="192.168.1.100"
# Alternative IP address (optional)
WEBAPP_SERVER_IP_ALT=""
# Webhook endpoint on web app server
WEBAPP_WEBHOOK_URL="https://app.example.com/webhooks/n8n"
# File upload endpoint on web app server
WEBAPP_UPLOAD_URL="https://app.example.com/api/upload"
# File download endpoint on web app server
WEBAPP_DOWNLOAD_URL="https://app.example.com/api/download"

# API authentication
# Enable API authentication
API_AUTH_ENABLED="true"
# JWT secret for token signing (generate with: openssl rand -base64 32)
JWT_SECRET=""
# JWT token expiration time
JWT_EXPIRES_IN="24h"
# Rate limiting window in milliseconds
API_RATE_LIMIT_WINDOW="900000"
# Maximum requests per window
API_RATE_LIMIT_MAX_REQUESTS="1000"

# Webhook forwarding
# Enable webhook forwarding to web app server
WEBHOOK_FORWARDING_ENABLED="true"
# Enable retry on webhook delivery failure
WEBHOOK_RETRY_ENABLED="true"
# Maximum number of retries
WEBHOOK_MAX_RETRIES="3"
# Delay between retries in milliseconds
WEBHOOK_RETRY_DELAY="5000"

# Health checks and monitoring
# Enable health check endpoints
HEALTH_CHECK_ENABLED="true"
# Health check interval in seconds
HEALTH_CHECK_INTERVAL="120"
# Health check timeout in seconds
HEALTH_CHECK_TIMEOUT="10"
# Maximum failures before alerting
HEALTH_CHECK_MAX_FAILURES="3"

# File transfer
# Enable secure file transfer between servers
FILE_TRANSFER_ENABLED="true"
# Transfer method: "https" or "sftp"
FILE_TRANSFER_METHOD="https"
# Maximum file size for transfers
MAX_FILE_SIZE="100MB"
# Maximum daily transfers per user
MAX_DAILY_TRANSFERS="1000"

# =============================================================================
# USER MONITORING AND ANALYTICS (MILESTONE 7)
# =============================================================================

# Monitoring settings
# Enable user activity monitoring
USER_MONITORING_ENABLED="true"
# Enable execution time tracking
EXECUTION_TRACKING_ENABLED="true"
# Enable storage usage monitoring
STORAGE_MONITORING_ENABLED="true"
# Enable performance analytics
PERFORMANCE_ANALYTICS_ENABLED="true"

# Metrics collection
# Metrics collection interval in seconds
METRICS_COLLECTION_INTERVAL="300"
# How long to retain metrics data in days
METRICS_RETENTION_DAYS="90"
# Enable system-wide metrics collection
SYSTEM_METRICS_ENABLED="true"

# Reporting
# Enable daily report generation
DAILY_REPORTS_ENABLED="true"
# Enable weekly report generation
WEEKLY_REPORTS_ENABLED="true"
# Enable monthly report generation
MONTHLY_REPORTS_ENABLED="true"
# Time to generate reports (24-hour format)
REPORT_GENERATION_TIME="01:00"

# Alerting
# Storage usage threshold for alerts (percentage)
STORAGE_ALERT_THRESHOLD="80"
# Performance threshold for alerts (percentage)
PERFORMANCE_ALERT_THRESHOLD="90"
# Error rate threshold for alerts (percentage)
ERROR_RATE_ALERT_THRESHOLD="10"

# Analytics
# Enable usage trend analysis
USAGE_TRENDS_ENABLED="true"
# Enable billing and cost analytics
BILLING_ANALYTICS_ENABLED="true"
# Enable predictive analytics (requires more resources)
PREDICTIVE_ANALYTICS_ENABLED="false"

# =============================================================================
# USER MANAGEMENT API (MILESTONE 7)
# =============================================================================

# API server settings
# Enable user management API server
USER_API_ENABLED="true"
# Port for the API server
USER_API_PORT="3001"
# Host for the API server
USER_API_HOST="localhost"

# API security
# Enable API key authentication
API_KEY_AUTH_ENABLED="true"
# Enable JWT authentication
API_JWT_AUTH_ENABLED="true"
# Enable OAuth2 authentication (not implemented yet)
API_OAUTH2_ENABLED="false"

# API rate limiting
# Rate limit for regular users (requests per minute)
API_USER_RATE_LIMIT="30"
# Rate limit for admin users (requests per minute)
API_ADMIN_RATE_LIMIT="100"
# Global rate limit (requests per minute)
API_GLOBAL_RATE_LIMIT="1000"

